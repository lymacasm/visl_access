import csv
from ics import Calendar, Event
from datetime import datetime
import arrow
import argparse
from io import StringIO
import visl_access

def csv_to_ics(csv_reader, ics_out_path):
    cal = Calendar()
    for row in csv_reader:
        if row["Time"][0] != " ":
            row["Time"] = " " + row["Time"]
        date = datetime.strptime(row["Date"] + row["Time"], "%Y-%m-%d %I:%M%p")
        date = arrow.get(date, "US/Pacific")
        if "Sagres" in row["home_team"]:
            team = row["visit_team"]
            home_status = "Home"
        else:
            team = row["home_team"]
            home_status = "Away"
        team = row["home_team"] if "Sagres" in row["visit_team"] else row["visit_team"]
        e = Event()
        e.name = f"{team} ({home_status})"
        e.begin = date
        e.location = row["field_name"]
        print(f"{e.name} @ {e.location} @ {e.begin}\n")

        cal.events.add(e)

    with open(ics_out_path, 'w') as ics_file:
        ics_file.writelines(cal.serialize_iter())

def csv_file_to_ics(csv_in_path, ics_out_path):
    with open(csv_in_path) as csv_file:
        csv_to_ics(csv.DictReader(csv_file), ics_out_path)

def get_team_ics(team_name, division, ics_out_path):
    args = visl_access.ScheduleMaintArgs(cmd=visl_access.Commands.CSV, team_name=team_name, division=division)
    csv_str = visl_access.get_csv_schedule(args)
    f = StringIO(csv_str)
    csv_to_ics(csv.DictReader(f), ics_out_path)

def main():
    parser = argparse.ArgumentParser(description="Parses the csv generated by visl.org's schedule filter feature to generate an importable calendar file (ics file). "
        "CSV generated via the Excel button on the page.")
    parser.add_argument("-t", "--team_name", required=True)
    parser.add_argument("-d", "--division", required=True)
    #parser.add_argument("-c", "--csv_in_file", required=True)
    parser.add_argument("-i", "--ics_out_file", required=True)

    args = parser.parse_args()
    #csv_to_ics(args.csv_in_file, args.ics_out_file)
    get_team_ics(args.team_name, args.division, args.ics_out_file)

if __name__ == "__main__":
    main()
